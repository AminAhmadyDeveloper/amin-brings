import { cloakSSROnlySecret } from 'ssr-only-secrets';

import type { FC, PropsWithChildren } from 'react';

import type { Metadata } from 'next';
import { headers } from 'next/headers';
import { NuqsAdapter } from 'nuqs/adapters/next/app';

import { Toaster } from '@/components/ui/sonner';
import { auth } from '@/libraries/auth-api';
import { mono, sans } from '@/libraries/font-utils';
import { cn } from '@/libraries/tailwind-utils';
import { ConfirmDialogProvider } from '@/providers/confirm-dialog-provider';
import { SessionProvider } from '@/providers/session-provider';
import { StylesProvider } from '@/providers/styles-provider';
import { ThemeProvider } from '@/providers/theme-provider';
import { TRPCProvider } from '@/providers/trpc-provider';

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

const RootLayout: FC<PropsWithChildren> = async ({ children }) => {
  const headersStore = await headers();
  const session = await auth.api.getSession({ headers: headersStore });
  const cookie = new Headers(headersStore).get('cookie') ?? '';
  const encryptedCookie = await cloakSSROnlySecret(
    cookie,
    'SECRET_CLIENT_COOKIE_VAR',
  );

  return (
    <html
      lang="fa"
      dir="rtl"
      suppressContentEditableWarning
      suppressHydrationWarning
    >
      <body className={cn(sans.variable, mono.variable, 'antialiased')}>
        <StylesProvider />
        <SessionProvider session={session}>
          <ConfirmDialogProvider>
            <NuqsAdapter>
              <TRPCProvider ssrOnlySecret={encryptedCookie}>
                <ThemeProvider defaultTheme="dark">{children}</ThemeProvider>
              </TRPCProvider>
            </NuqsAdapter>
          </ConfirmDialogProvider>
        </SessionProvider>
        <Toaster />
      </body>
    </html>
  );
};

export default RootLayout;
